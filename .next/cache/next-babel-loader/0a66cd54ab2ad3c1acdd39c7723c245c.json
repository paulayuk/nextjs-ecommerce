{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/mac/sites/nextjs-shopping-cart/pages/products/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../../components/layout';\nimport ProductItem from '../../components/Product-item.js';\nimport fetch from 'isomorphic-unfetch';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { cartReducer } from \"../../components/reducer\";\nimport { connect } from \"react-redux\";\nimport store from '../../components/store';\nimport { DataConsumer } from '../../components/cartcontext.js';\n\nvar Productitem = function Productitem(props) {\n  return __jsx(ProductItem, {\n    product: props.product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n};\n\nProductitem.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, product;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://my-json-server.typicode.com/mood-board/demo/products/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            product = _context.sent;\n            return _context.abrupt(\"return\", {\n              product: product\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Productitem;","map":{"version":3,"sources":["/Users/mac/sites/nextjs-shopping-cart/pages/products/[id].js"],"names":["useState","Layout","ProductItem","fetch","createStore","Provider","cartReducer","connect","store","DataConsumer","Productitem","props","product","getInitialProps","context","id","query","res","json"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAE3B,SACE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,KAAK,CAACC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAID,CAND;;AAQAF,WAAW,CAACG,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA8B,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,EADoB,GACbD,OAAO,CAACE,KADK,CACpBD,EADoB;AAAA;AAAA,mBAEVZ,KAAK,wEAAiEY,EAAjE,EAFK;;AAAA;AAEtBE,YAAAA,GAFsB;AAAA;AAAA,mBAGNA,GAAG,CAACC,IAAJ,EAHM;;AAAA;AAGtBN,YAAAA,OAHsB;AAAA,6CAIrB;AAAEA,cAAAA,OAAO,EAAPA;AAAF,aAJqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeF,WAAf","sourcesContent":["import { useState } from 'react';\nimport Layout from '../../components/layout';\nimport ProductItem from '../../components/Product-item.js'\nimport fetch from 'isomorphic-unfetch';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { cartReducer } from \"../../components/reducer\";\nimport { connect } from \"react-redux\";\nimport store from '../../components/store'\nimport { DataConsumer } from '../../components/cartcontext.js'\n\nconst Productitem = props => {\n\n  return (\n    <ProductItem product={props.product} />\n  )\n\n};\n\nProductitem.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://my-json-server.typicode.com/mood-board/demo/products/${id}`);\n  const product = await res.json();\n  return { product };\n};\n\nexport default Productitem;\n"]},"metadata":{},"sourceType":"module"}